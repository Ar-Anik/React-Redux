{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    count: 0\n  },\n  reducers: {\n    increment: state => {\n      state.count = state.count + 1;\n    },\n    decrement: state => {\n      state.count = state.count - 1;\n    },\n    reset: state => {\n      state.count = 0;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  reset\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","count","reducers","increment","state","decrement","reset","actions","reducer"],"sources":["/home/prismerp/Desktop/AllFile/React-Redux/counter_by_toolkit/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n\n  initialState: {\n    count: 0,\n  },\n\n  reducers: {\n    increment: (state) => {\n      state.count = state.count + 1;\n    },\n    decrement: (state) => {\n      state.count = state.count - 1;\n    },\n    reset: (state) => {\n      state.count = 0;\n    },\n  },\n});\n\nexport const { increment, decrement, reset } = counterSlice.actions;\n\nexport default counterSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,SAAS;EAEfC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EAEDC,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAG,CAAC;IAC/B,CAAC;IACDI,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAG,CAAC;IAC/B,CAAC;IACDK,KAAK,EAAGF,KAAK,IAAK;MAChBA,KAAK,CAACH,KAAK,GAAG,CAAC;IACjB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,SAAS;EAAEE,SAAS;EAAEC;AAAM,CAAC,GAAGR,YAAY,CAACS,OAAO;AAEnE,eAAeT,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}