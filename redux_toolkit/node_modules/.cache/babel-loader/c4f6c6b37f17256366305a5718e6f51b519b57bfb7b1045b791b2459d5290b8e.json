{"ast":null,"code":"var _jsxFileName = \"/home/prismerp/Desktop/AllFile/React-Redux/redux_toolkit/src/features/counter/counterView.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increment, decrement, reset, incrementByValue } from \"./counterSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterView = () => {\n  _s();\n  const count = useSelector(state => state.counter.count);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter App By Redux-Toolkit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Count - \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(increment()),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(decrement()),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(reset()),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(incrementByValue(5)),\n      children: \"IncrementByFive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(CounterView, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = CounterView;\nexport default CounterView;\nvar _c;\n$RefreshReg$(_c, \"CounterView\");","map":{"version":3,"names":["useDispatch","useSelector","increment","decrement","reset","incrementByValue","CounterView","count","state","counter","dispatch"],"sources":["/home/prismerp/Desktop/AllFile/React-Redux/redux_toolkit/src/features/counter/counterView.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { increment, decrement, reset, incrementByValue } from \"./counterSlice\";\n\nconst CounterView = () => {\n  const count = useSelector((state) => state.counter.count);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h1>Counter App By Redux-Toolkit</h1>\n      <h4>Count - {count}</h4>\n\n      <button onClick={() => dispatch(increment())}>Increment</button>\n      <button onClick={() => dispatch(decrement())}>Decrement</button>\n      <button onClick={() => dispatch(reset())}>Reset</button>\n      <button onClick={() => dispatch(incrementByValue(5))}>\n        IncrementByFive\n      </button>\n    </div>\n  );\n};\n\nexport default CounterView;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,gBAAgB,QAAQ,gBAAgB;AAAC;AAE/E,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;EACzD,MAAMG,QAAQ,GAAGV,WAAW,EAAE;EAC9B,oBACE;IAAA,wBACE;MAAA,UAAI;IAA4B;MAAA;MAAA;MAAA;IAAA,QAAK,eACrC;MAAA,WAAI,UAAQ,EAACO,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAExB;MAAQ,OAAO,EAAE,MAAMG,QAAQ,CAACR,SAAS,EAAE,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eAChE;MAAQ,OAAO,EAAE,MAAMQ,QAAQ,CAACP,SAAS,EAAE,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eAChE;MAAQ,OAAO,EAAE,MAAMO,QAAQ,CAACN,KAAK,EAAE,CAAE;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACxD;MAAQ,OAAO,EAAE,MAAMM,QAAQ,CAACL,gBAAgB,CAAC,CAAC,CAAC,CAAE;MAAA,UAAC;IAEtD;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GAhBIC,WAAW;EAAA,QACDL,WAAW,EACRD,WAAW;AAAA;AAAA,KAFxBM,WAAW;AAkBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}