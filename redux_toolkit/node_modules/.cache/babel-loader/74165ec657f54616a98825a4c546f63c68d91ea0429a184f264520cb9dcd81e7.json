{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\n  const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  return response.data;\n});\nconst postSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    isLoading: false,\n    posts: [],\n    error: null\n  },\n  extraReducers: builders => {\n    builders.addCase(fetchPosts.pending, state => {\n      state.isLoading = true;\n    });\n    builders.addCase(fetchPosts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n      state.error = [];\n    });\n    builders.addCase(fetchPosts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.posts = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchPosts","response","get","data","postSlice","name","initialState","isLoading","posts","error","extraReducers","builders","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/home/prismerp/Desktop/AllFile/React-Redux/redux_toolkit/src/features/posts/postSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\n  const response = await axios.get(\n    \"https://jsonplaceholder.typicode.com/posts\"\n  );\n  return response.data;\n});\n\nconst postSlice = createSlice({\n  name: \"posts\",\n\n  initialState: {\n    isLoading: false,\n    posts: [],\n    error: null,\n  },\n\n  extraReducers: (builders) => {\n    builders.addCase(fetchPosts.pending, (state) => {\n      state.isLoading = true;\n    });\n    builders.addCase(fetchPosts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n      state.error = [];\n    });\n    builders.addCase(fetchPosts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.posts = [];\n      state.error = action.error.message;\n    });\n  },\n});\n\nexport default postSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAC9B,4CAA4C,CAC7C;EACD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,OAAO;EAEbC,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACT,CAAC;EAEDC,aAAa,EAAGC,QAAQ,IAAK;IAC3BA,QAAQ,CAACC,OAAO,CAACZ,UAAU,CAACa,OAAO,EAAGC,KAAK,IAAK;MAC9CA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC;IACFI,QAAQ,CAACC,OAAO,CAACZ,UAAU,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACxDF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACL,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;IACFE,QAAQ,CAACC,OAAO,CAACZ,UAAU,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACP,KAAK,CAACU,OAAO;IACpC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}